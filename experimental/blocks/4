Hello all,
It's 11th Dec 2024, the day I am going to get admitted to a hospital for a surgery. 

Already implemented some part of my vision of Fairytale DB here: https://github.com/mkrjn99/FairyTaleDB_impl, along with a PDH teammate: Utkarsh Raj Srivastava. Still closed-source, I am too embarassed at the extremely bad code I am writing.

You can have a look at the schema here: https://github.com/mkrjn99/FairyTaleDB/blob/main/data/data.mkrjn99.0.tar.gz

The basic idea is this: the mkrjn99 wallet has 15M coins/tokens/whatever you wanna call them. The wallet has a parent called 'universe' which represents the wealth of the entire universe. The mkrjn99 wallet also owes 15M coins back to the universe.

For wallets going forward, we can start them with any amount of coins in current, and put the same amount in dues. Although for simplicity, it might be the best idea to disallow inflating the tokens too much.

In general, we can have the child wallet "preserve the history" of its parent wallet by having a SHA512 sum in its tar.gz. We can also have a binary representation of the wallet by this algorithm:

universe:  0b000000
mkrjn99:   0b100000 [1st child of the universe wallet]
hsraktu17: 0b011111 [1st child of the mkrjn99 wallet]
tanuj:     0b011110 [2nd child of the mkrjn99 wallet]

This way the left-most child of a wallet can be found by doing a "minus x" in binary, where x is the smallest such number such that the newly created walletID does not conflict with any existing wallet ID. The right-sibling can be found by just doing a "minus 1". Inspiration: left-child-right-sibling paradigm that I read in the (in)famous algorithms book by Thomas Cormen.

97686c1dc4a047d9930a06f4382ef91395fce3a91846dae69f3cbcea923ac548219da0bf58c61b1297d1d0bdf6043361466f891bbb63c4074bb11fefc7b65924
